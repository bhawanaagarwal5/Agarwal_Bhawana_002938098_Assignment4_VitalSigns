/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Functionality.patientDetails;
import Functionality.personDetails;
import Functionality.vitalReadings;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author agarw
 */
public class UpdateVitalReadings extends javax.swing.JPanel {

    /**
     * Creates new form UpdateVitalReadings
     */
    private personDetails personDetails;
    private vitalReadings vitalreadings;
    private JPanel jPanelContainer;
    private ViewVitalHistory viewVitalHistorypanel;
    public UpdateVitalReadings(vitalReadings vitalreadings,personDetails personDetails,JPanel jPanelContainer, ViewVitalHistory viewVitalHistoryPanel) {
        initComponents();
        //this.personDetails = personDetails;
        this.vitalreadings=vitalreadings;
        this.jPanelContainer = jPanelContainer;
        this.viewVitalHistorypanel = viewVitalHistoryPanel;
        this.personDetails = personDetails;
        
        patientFirstNamejTxt.setText(personDetails.getFirstName());
        populateTextFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        respiratorytxtfleid = new javax.swing.JTextField();
        heartTxtfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        systolicTxtfield = new javax.swing.JTextField();
        weightpondTxtfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        updatejBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        patientFirstNamejTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 153));

        jPanel1.setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Respiratory Rate");

        respiratorytxtfleid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respiratorytxtfleidActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Heart Rate");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Systolic Blood Pressure");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Weight in Pounds");

        updatejBtn.setBackground(new java.awt.Color(204, 204, 255));
        updatejBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updatejBtn.setForeground(new java.awt.Color(0, 102, 102));
        updatejBtn.setText("Update");
        updatejBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        updatejBtn.setBorderPainted(false);
        updatejBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatejBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Patient First Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Update Vital Readings Details");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(patientFirstNamejTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(systolicTxtfield)
                                    .addComponent(respiratorytxtfleid)
                                    .addComponent(heartTxtfield, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                    .addComponent(weightpondTxtfield, javax.swing.GroupLayout.Alignment.TRAILING)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(updatejBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientFirstNamejTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(respiratorytxtfleid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(heartTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systolicTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(weightpondTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(updatejBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130))
        );

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Back");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(33, 33, 33)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void respiratorytxtfleidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respiratorytxtfleidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_respiratorytxtfleidActionPerformed

    private void updatejBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatejBtnActionPerformed
        // TODO add your handling code here:
        String Normality ="";
        
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        Date dateobj = new Date();
        /*    respiratorylbl.setVisible(false);
        heartRateLbl.setVisible(false);
        systolicLbl.setVisible(false);
        weightLbl.setVisible(false);

        //String regex="^([+-]?\\d*\\.?\\d*)$";*/

       // DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
       // Date dateobj = new Date();

       // DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
       // Date dateobj = new Date();
     
            float respiratoryRate = Float.parseFloat(respiratorytxtfleid.getText().trim());
            float heartRate = Float.parseFloat(heartTxtfield.getText().trim());
            float systolicBldPre = Float.parseFloat(systolicTxtfield.getText().trim());
            float weightInPound = Float.parseFloat(weightpondTxtfield.getText().trim());
            
            int age = personDetails.getPatientDetails().getAge();
            String patientName = patientFirstNamejTxt.getText().trim();
            String cityName = personDetails.getCityName();
            String communityName = personDetails.getCommunityName();
            
               
              if(age > 0 && age <=3)
        {
            if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=80 && heartRate<=130)
                    && (systolicBldPre >= 80 && systolicBldPre <=110) && (weightInPound >=22 && weightInPound <=31))
                    {
                        Normality = "Normal";
                    }
            else
            {
                Normality = "Abnormal";
            }
        }
        else if(age >=4 && age <= 5)
        {
         if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=80 && heartRate<=120)
                    && (systolicBldPre >= 80 && systolicBldPre <=110) && (weightInPound >=31 && weightInPound <=40))
                    {
                         Normality = "Normal";
                    }
         else
         {
             Normality = "Abnormal";
         }
       }
        else if(age >=6 && age <= 12)
        {
            if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=70 && heartRate<=100)
                    && (systolicBldPre >= 80 && systolicBldPre <=120) && (weightInPound >=41 && weightInPound <=92))
                    {
                        Normality = "Normal";
                    }
            else
            {
                Normality = "Abnormal";
            }
        }
        else
        {
            if((respiratoryRate >= 12 && respiratoryRate<= 20) && (heartRate>=55 && heartRate<=105)
                    && (systolicBldPre >= 110 && systolicBldPre <=120) && (weightInPound >110))
                    {
                        Normality = "Normal";
                    }
            else
            {
                Normality = "Abnormal";
            }
        }
            
            
          //  int age = patientDetails.getAge();
           // vitalReadings vsr = vitalHistory.addVital();
            //String dateTime = timeTxtfield.getText();
           // patientDetails pd = personDetails.getPatientDetails();
           /* vitalReadings vr = patientDetails.getVitalSign();
            vr.setHeartRate(heartRate);
            vr.setRespiratoryRate(respiratoryRate);
            vr.setSystolicPressure(systolicBldPre);
            vr.setWeightPounds(weightInPound);
            vr.setDateTime(String.valueOf(dateobj));*/
            
                     //  vitalReadings vr = patientDetails.getVitalSign();
            vitalreadings.setHeartRate(heartRate);
            vitalreadings.setRespiratoryRate(respiratoryRate);
            vitalreadings.setSystolicPressure(systolicBldPre);
            vitalreadings.setWeightPounds(weightInPound);
            vitalreadings.setDateTime(df.format(dateobj));
            vitalreadings.setPatientName(patientName);
            vitalreadings.setVitalSign(Normality);
            vitalreadings.setCityName(cityName);
            vitalreadings.setCommunityName(communityName);

            JOptionPane.showMessageDialog(null, "Vital Readings Updated Successfully");
            
            respiratorytxtfleid.setText("");
            heartTxtfield.setText("");
            systolicTxtfield.setText("");
            weightpondTxtfield.setText("");
            
 
    }//GEN-LAST:event_updatejBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jPanelContainer.remove(this);
        viewVitalHistorypanel.ValidateNormality();
        viewVitalHistorypanel.populateVitalTable();
        
        CardLayout layout = (CardLayout)jPanelContainer.getLayout();
        layout.previous(jPanelContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField heartTxtfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField patientFirstNamejTxt;
    private javax.swing.JTextField respiratorytxtfleid;
    private javax.swing.JTextField systolicTxtfield;
    private javax.swing.JButton updatejBtn;
    private javax.swing.JTextField weightpondTxtfield;
    // End of variables declaration//GEN-END:variables

    private void populateTextFields() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                
      /*  float respiratory = patientDetails.getVitalSign().getRespiratoryRate();
        float heartRate = patientDetails.getVitalSign().getHeartRate();
        float systolicPressure = patientDetails.getVitalSign().getSystolicPressure();
        float weight = patientDetails.getVitalSign().getWeightPounds();*/
        float respiratory = vitalreadings.getRespiratoryRate();
        float heartRate = vitalreadings.getHeartRate();
        float systolicPressure = vitalreadings.getSystolicPressure();
        float weight = vitalreadings.getWeightPounds();
        
        respiratorytxtfleid.setText(String.valueOf(respiratory));
        heartTxtfield.setText(String.valueOf(heartRate));
        systolicTxtfield.setText(String.valueOf(systolicPressure));
        weightpondTxtfield.setText(String.valueOf(weight));
    }
}
