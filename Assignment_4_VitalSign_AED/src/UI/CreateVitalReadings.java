/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;
import Functionality.patientDetails;
import Functionality.personDetails;
import Functionality.vitalReadings;
import Functionality.vitalSignHistory;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
/**
 *
 * @author agarw
 */
public class CreateVitalReadings extends javax.swing.JPanel {

    /**
     * Creates new form CreateVitalReadings
     */
    private personDetails personDetails;
    private vitalSignHistory vitalHistory;
    private JPanel jPanelContainer;
    public CreateVitalReadings(vitalSignHistory vitalSignHistory,personDetails personDetails,JPanel jPanelContainer) {
        initComponents();
        this.vitalHistory = vitalSignHistory;
        this.personDetails = personDetails;
        this.jPanelContainer = jPanelContainer;
        
        patientFirstNamejTxt.setText(personDetails.getFirstName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        respiratorytxtfleid = new javax.swing.JTextField();
        heartTxtfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        systolicTxtfield = new javax.swing.JTextField();
        weightpondTxtfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        createVitaljBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        patientFirstNamejTxt = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Respiratory Rate");

        respiratorytxtfleid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respiratorytxtfleidActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Heart Rate");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Systolic Blood Pressure");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Weight in Pounds");

        createVitaljBtn.setBackground(new java.awt.Color(204, 204, 255));
        createVitaljBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createVitaljBtn.setForeground(new java.awt.Color(0, 102, 102));
        createVitaljBtn.setText("Add Vital Readings");
        createVitaljBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        createVitaljBtn.setBorderPainted(false);
        createVitaljBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createVitaljBtnActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Back");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add Vital Readings");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Patient First Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(systolicTxtfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                            .addComponent(heartTxtfield, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(respiratorytxtfleid, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientFirstNamejTxt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(weightpondTxtfield)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(createVitaljBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel5)
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(patientFirstNamejTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(respiratorytxtfleid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(heartTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systolicTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightpondTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(48, 48, 48)
                .addComponent(createVitaljBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void respiratorytxtfleidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respiratorytxtfleidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_respiratorytxtfleidActionPerformed

    private void createVitaljBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createVitaljBtnActionPerformed
        // TODO add your handling code here:

       // DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        //Date dateobj = new Date();
        /*    respiratorylbl.setVisible(false);
        heartRateLbl.setVisible(false);
        systolicLbl.setVisible(false);
        weightLbl.setVisible(false);

        //String regex="^([+-]?\\d*\\.?\\d*)$";*/
        String Normality ="";
        
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        Date dateobj = new Date();
        try
        {
            float respiratoryRate = Float.parseFloat(respiratorytxtfleid.getText().trim());
            float heartRate = Float.parseFloat(heartTxtfield.getText().trim());
            float systolicBldPre = Float.parseFloat(systolicTxtfield.getText().trim());
            float weightInPound = Float.parseFloat(weightpondTxtfield.getText().trim());
            int age = personDetails.getPatientDetails().getAge();
            String patientName = patientFirstNamejTxt.getText().trim();
            String cityName = personDetails.getCityName();
            String communityName = personDetails.getCommunityName();
            
            
              if(age > 0 && age <=3)
        {
            if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=80 && heartRate<=130)
                    && (systolicBldPre >= 80 && systolicBldPre <=110) && (weightInPound >=22 && weightInPound <=31))
                    {
                        Normality = "Normal";
                    }
            else
            {
                Normality = "Abnormal";
            }
        }
        else if(age >=4 && age <= 5)
        {
         if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=80 && heartRate<=120)
                    && (systolicBldPre >= 80 && systolicBldPre <=110) && (weightInPound >=31 && weightInPound <=40))
                    {
                         Normality = "Normal";
                    }
         else
         {
             Normality = "Abnormal";
         }
       }
        else if(age >=6 && age <= 12)
        {
            if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=70 && heartRate<=100)
                    && (systolicBldPre >= 80 && systolicBldPre <=120) && (weightInPound >=41 && weightInPound <=92))
                    {
                        Normality = "Normal";
                    }
            else
            {
                Normality = "Abnormal";
            }
        }
        else
        {
            if((respiratoryRate >= 12 && respiratoryRate<= 20) && (heartRate>=55 && heartRate<=105)
                    && (systolicBldPre >= 110 && systolicBldPre <=120) && (weightInPound >110))
                    {
                        Normality = "Normal";
                    }
            else
            {
                Normality = "Abnormal";
            }
        }
              
            vitalReadings vsr = vitalHistory.addVital();
            //String dateTime = timeTxtfield.getText();

            vsr.setDateTime(df.format(dateobj));
            vsr.setRespiratoryRate(respiratoryRate);
            vsr.setHeartRate(heartRate);
            vsr.setSystolicPressure(systolicBldPre);
            vsr.setWeightPounds(weightInPound);
            vsr.setVitalSign(Normality);
            vsr.setPatientName(patientName);
            vsr.setCityName(cityName);
            vsr.setCommunityName(communityName);
            //vsr.setDateTime(dateTime);
            JOptionPane.showMessageDialog(null, "Vital Readings Added Successfully");
            
            respiratorytxtfleid.setText("");
            heartTxtfield.setText("");
            systolicTxtfield.setText("");
            weightpondTxtfield.setText("");

            
            //vsr.setVitalSign("Normal");
          /* if(age > 0 && age <=3)
            {
                if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=80 && heartRate<=130)
                    && (systolicBldPre >= 80 && systolicBldPre <=110) && (weightInPound >=22 && weightInPound <=31))
                {
                    vsr.setVitalSign("Normal");
                }
                else
                {
                    vsr.setVitalSign("Abnormal");
                }
            }
            else if(age >=4 && age <= 5)
            {
                if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=80 && heartRate<=120)
                    && (systolicBldPre >= 80 && systolicBldPre <=110) && (weightInPound >=31 && weightInPound <=40))
                {
                    vsr.setVitalSign("Normal");
                }
                else
                {
                    vsr.setVitalSign("Abnormal");
                }
            }
            else if(age >=6 && age <= 12)
            {
                if((respiratoryRate >= 20 && respiratoryRate<= 30) && (heartRate>=70 && heartRate<=100)
                    && (systolicBldPre >= 80 && systolicBldPre <=120) && (weightInPound >=41 && weightInPound <=92))
                {
                    vsr.setVitalSign("normal");
                }
                else
                {
                    vsr.setVitalSign("Abnormal");
                }
            }
            else
            {
                if((respiratoryRate >= 12 && respiratoryRate<= 20) && (heartRate>=55 && heartRate<=105)
                    && (systolicBldPre >= 110 && systolicBldPre <=120) && (weightInPound >110))
                {
                    vsr.setVitalSign("Normal");
                }
                else
                {
                    vsr.setVitalSign("Abnormal");
                }
            } */
        }catch(NumberFormatException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter the values correctly, only numbers are allowed.");
        }

    }//GEN-LAST:event_createVitaljBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jPanelContainer.remove(this);
        CardLayout layout = (CardLayout)jPanelContainer.getLayout();
        layout.previous(jPanelContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createVitaljBtn;
    private javax.swing.JTextField heartTxtfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField patientFirstNamejTxt;
    private javax.swing.JTextField respiratorytxtfleid;
    private javax.swing.JTextField systolicTxtfield;
    private javax.swing.JTextField weightpondTxtfield;
    // End of variables declaration//GEN-END:variables
}
