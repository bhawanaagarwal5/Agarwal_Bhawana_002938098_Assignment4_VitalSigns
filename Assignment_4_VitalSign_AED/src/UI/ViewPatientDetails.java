/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

/**
 *
 * @author agarw
 */
import Functionality.patientDetails;
import Functionality.personDetails;
import Functionality.patientDetailsDirectory;
import Functionality.personDetailsDirectory;
import Functionality.vitalSignHistory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ViewPatientDetails extends javax.swing.JPanel {

    /**
     * Creates new form ViewPatientDetails
     */
    private patientDetails patientDetails;
    private patientDetailsDirectory patientDirectory;
    private personDetailsDirectory personDirectory;
    private personDetails personDetails;
    private vitalSignHistory vitalSignHistory;
    
    JPanel jPanelContainer;
    public ViewPatientDetails(personDetailsDirectory dir, JPanel panel) {
        initComponents();
        //this.patientDetails = pd;
        //this.patientDirectory = dir;
        this.personDirectory = dir;
        this.jPanelContainer = panel;
        this.vitalSignHistory = new vitalSignHistory();
        populateTable();
       // populatePersonTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientDetailsjtable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnEditPatient = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("View Patient Details");

        patientDetailsjtable.setBackground(new java.awt.Color(204, 204, 255));
        patientDetailsjtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Patient ID", "Primary Doctor", "Preferred Pharmacy"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientDetailsjtable.setGridColor(new java.awt.Color(153, 153, 153));
        jScrollPane1.setViewportView(patientDetailsjtable);
        if (patientDetailsjtable.getColumnModel().getColumnCount() > 0) {
            patientDetailsjtable.getColumnModel().getColumn(0).setResizable(false);
            patientDetailsjtable.getColumnModel().getColumn(1).setResizable(false);
            patientDetailsjtable.getColumnModel().getColumn(2).setResizable(false);
            patientDetailsjtable.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Add Vital Readings");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton1.setBorderPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 102, 102));
        jButton2.setText("View Vital History");
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton2.setBorderPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 102, 102));
        jButton3.setText("Back");
        jButton3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnEditPatient.setBackground(new java.awt.Color(204, 204, 255));
        btnEditPatient.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEditPatient.setForeground(new java.awt.Color(0, 102, 102));
        btnEditPatient.setText("Edit Patient Details");
        btnEditPatient.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btnEditPatient.setBorderPainted(false);
        btnEditPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPatientActionPerformed(evt);
            }
        });

        btnDeletePatient.setBackground(new java.awt.Color(204, 204, 255));
        btnDeletePatient.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDeletePatient.setForeground(new java.awt.Color(0, 102, 102));
        btnDeletePatient.setText("Delete Patient Details");
        btnDeletePatient.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        btnDeletePatient.setBorderPainted(false);
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 39, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEditPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeletePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeletePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(149, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int count = patientDetailsjtable.getSelectedRow();
        if(count >= 0)
        {
            personDetails personDetails1 = (personDetails)patientDetailsjtable.getValueAt(count, 0);
            CreateVitalReadings cvr = new CreateVitalReadings(vitalSignHistory,personDetails1,jPanelContainer);
            jPanelContainer.add("Createvital",cvr);
            CardLayout layout = (CardLayout)jPanelContainer.getLayout();
            layout.next(jPanelContainer);
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select at least one row to add the Vital Information");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int count = patientDetailsjtable.getSelectedRow();
        if(count >= 0)
        {
            personDetails = (personDetails)patientDetailsjtable.getValueAt(count, 0);
            ViewVitalHistory vvh = new ViewVitalHistory(vitalSignHistory,personDetails,jPanelContainer, personDetails.getFirstName());
            jPanelContainer.add("ViewVitalTable",vvh);
            CardLayout layout = (CardLayout)jPanelContainer.getLayout();
            layout.next(jPanelContainer);
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select at least one row to update the Vital Information");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jPanelContainer.remove(this);
        //viewPersonDetails.generateTable();
        CardLayout layout = (CardLayout)jPanelContainer.getLayout();
        layout.previous(jPanelContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEditPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPatientActionPerformed
        // TODO add your handling code here:

        int count = patientDetailsjtable.getSelectedRow();
        if(count >= 0)
        {
            personDetails =(personDetails) patientDetailsjtable.getValueAt(count, 0);
            Edit_Patient ep = new Edit_Patient(patientDirectory, personDetails, jPanelContainer,this);
            jPanelContainer.add(ep);
            CardLayout layout = (CardLayout)jPanelContainer.getLayout();
            layout.next(jPanelContainer);
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select atleast one row to update Patient details");
        }
    }//GEN-LAST:event_btnEditPatientActionPerformed

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
        // TODO add your handling code here:
         int count = patientDetailsjtable.getSelectedRow();
        if(count >= 0)
        {
            personDetails =(personDetails) patientDetailsjtable.getValueAt(count, 0);
            personDirectory.deletePersonDetails(personDetails);
            JOptionPane.showMessageDialog(this, "Patient Detail has been deleted.");
            populateTable();
        }
    }//GEN-LAST:event_btnDeletePatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JButton btnEditPatient;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientDetailsjtable;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        DefaultTableModel dtm = (DefaultTableModel)patientDetailsjtable.getModel();
       // int count = dtm.getRowCount();
        dtm.setRowCount(0);
        for(personDetails pd:personDirectory.getPersonDirectory())
        {
            if(pd.getPatientDetails()!= null)
            {
            Object col[] = new Object[4];
            col[0] = pd;
            col[1] = pd.getPatientDetails().getPatientID();
            col[2] = pd.getPatientDetails().getDoctorName();
            col[3] = pd.getPatientDetails().getPrefPharmacy();
            dtm.addRow(col);
            }
        }
        
    } 

}
